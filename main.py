import asyncio
import logging

from aiogram import Bot, Dispatcher

from config_reader import config
from handlers import cmds
from callbacks import user_cb
from keyboards.builders import inline_builder
from orm.db import User, Track, AsyncSessionLocal, init_db, reset_database


async def main() -> None:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await init_db()
    
    bot = Bot(config.BOT_TOKEN.get_secret_value())
    dp = Dispatcher()

    dp.include_routers(
        cmds.router,
        user_cb.router
    )
    
    await bot.send_message(
        chat_id=config.ADMIN_ID, 
        text='üî∞ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω!!', 
        reply_markup=inline_builder(['‚ùå –£–¥–∞–ª–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ'], ['del'])
    )

    await bot.delete_webhook(True)
    try:
        await dp.start_polling(bot)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
        await AsyncSessionLocal.close()

try:
    if __name__ == '__main__':
        logging.basicConfig(level=logging.INFO, filename="logs.log",filemode="w",
                        format="%(asctime)s %(levelname)s %(message)s")
        logging.info("Bot activate!")
        print("run!")
        asyncio.run(main())
except KeyboardInterrupt:
    logging.info("Bot force stopped!")
    print('stop!')
    exit()
    